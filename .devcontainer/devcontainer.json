{
	"name": "My Java/Kotlin Application",

	"dockerComposeFile": "../docker/docker-compose.yml",
	"service": "openjdk",
	"workspaceFolder": "/workspace",
	
	// Set *default* container specific settings.json values on container create. 
	"settings": {
		//"terminal.integrated.shell.linux": "/bin/ash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	// Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
	"extensions": [
		// Language: Java / Kotlin
		"vscjava.vscode-java-pack",
		"redhat.java",
		"vscjava.vscode-java-debug",
		"sohibe.java-generate-setters-getters",

		// Spring Boot
		"vscjava.vscode-spring-initializr",
		"pivotal.vscode-spring-boot",
		"pivotal.vscode-boot-dev-pack",
		"vscjava.vscode-spring-boot-dashboard",
		"gabrielbb.vscode-lombok",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	//"remoteUser": "vscode"
}